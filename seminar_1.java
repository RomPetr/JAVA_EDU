/*
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ0
–í—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å ‚ÄúHello world!‚Äù.
–í—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.


import java.sql.Date; // –¥–ª—è –∫–ª–∞—Å—Å–∞ Date (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π)
import java.time.LocalDateTime; // –¥–ª—è –∫–ª–∞—Å—Å–∞ Calendar (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π)
import java.util.Calendar;

public class seminar_1 {
    public static void main(String[] args) {
        System.out.println("Hello world!");

        //Date
        //Calendar
        System.out.println(LocalDateTime.now());
        int[] arr = {23, 34, 45};

        for (int elem : arr) {
           System.out.print (elem + " ");
        }
        System.out.println();
    }
}
*/

/*
 * –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
üìå –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏
<–ò–º—è> –≤ –∫–æ–Ω—Å–æ–ª–∏.
üìå –ü–æ–ª—É—á–∏—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ
‚Äú–ü—Ä–∏–≤–µ—Ç, <–ò–º—è>!‚Äù
 * 
 
import java.util.Scanner;

public class seminar_1 {

    public static void main(String[] args){
        // –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        // System.out.println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è");
        // String name = System.console().readLine();
        // System.out.println("–ü—Ä–∏–≤–µ—Ç, " + name + "!");

        // –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        Scanner inputScanner = new Scanner(System.in);
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è");
        String name1 = inputScanner.nextLine();
        System.out.printf("–ü—Ä–∏–≤–µ—Ç, %s !", name1);
        System.out.println(" ");   
        inputScanner.close();

    }
}
*/

/*
 * –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
–î–∞–Ω –º–∞—Å—Å–∏–≤ –¥–≤–æ–∏—á–Ω—ã—Ö —á–∏—Å–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä [1,1,0,1,1,1], –≤—ã–≤–µ—Å—Ç–∏
–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö 1.
 */

 public class seminar_1 {
    public static void main(String[] args) {
        int[] nums = {1, 1, 0, 1, 1, 1};
        int count = 0;
        int maxCount = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 1) {
                count++;
                if (count > maxCount) {
                    maxCount = count;
                }
            } else {
                 count = 0;
                }
            
        }
        System.out.println("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö 1: " + maxCount);
    }
 }